@model h37.Models.ViewModels.ProjectConfigViewModel
@{
    ViewBag.Title = "Config";
}

<h2 id="haus2">Project Name: @Html.DisplayFor(x => Model.projectName)</h2>
<section id="fileList" class="editor-left">
    <div class="row">
        <h3 id="haus2">Users in Project</h3>
        <hr />
        <div class="col-md-10">

            @*
            * This section generates and shows a dropdown list of users
            * that are available to be added to the project.
            * It prevents the user from adding someone to the project that
            * is already part of the project, or the owner of the project
            * himself.
            *@
            @{
                List<SelectListItem> listItems = new List<SelectListItem>();

                foreach (var item in Model.userList)
                {
                    if (Model.usersInProject.Where(x => x.userID.Equals(item.userID)).FirstOrDefault() != null)
                    {
                        @*Do nothing since we dont want that person on our list*@
                    }
                    else if (Model.projectOwnerID.Equals(item.userID))
                    {
                        @*Do nothing since we dont want that person on our list*@
                    }
                    else
                    {
                        listItems.Add(new SelectListItem
                        {
                            Text = item.userName,
                            Value = item.userName
                        });
                    }
                }
            }
            @using (Html.BeginForm("SubscribeUser", "User", FormMethod.Post))
            {
                @Html.DropDownList("userName", listItems, "Select User", new { @class = "form-control left-float-dropdown" })
                @Html.HiddenFor(m => m.projectID, new { projectID = Model.projectID })
                <input type="submit" value="Add user" class="btn btn-success button-size-6" />
            }
        </div>
    </div>
</section>

<div class="border-carrier">
</div>

    @*
    * This section include all of the configuration options for
    * the current project.
    * As of the current build, the use is only able to change the
    * name or the type (c#, js) of the project.
    *@
<h3 id="information haus3" class="editor-right">Configure project</h3>
<div class="editor-right">
    @using (Html.BeginForm("SaveConfig", "Project", FormMethod.Post))
    {
        @*<h3 id="haus3" class="editor-right">@Html.ViewBag.projectName</h3>*@
        <hr class="align-the-editor" />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.projectName, "", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <input class="form-control" id="projectName" name="projectName" placeholder="PROJECT NAME" value="@Model.projectName" type="text">
                @Html.ValidationMessageFor(m => m.projectName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.type, "", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <select data-val="true" data-val-required="The projectType field is required." htmlattributes="{ class = form-control }" id="projectType" name="projectType">
                    <option value="">Select type</option>
                    <option selected="selected" value="0">js</option>
                    <option value="1">cs</option>
                </select>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save changes" class="btn btn-success button-size-5" />
            </div>
        </div>
    }
</div>
<div class="editor-left"></div>

    @*
    * This section shows all the users that currently have
    * access to the project. It also generates a remove button
    * for the owner of the project to remove other users from
    * the project.
    *@
<section id="usersInProject" class="editor-left">
    <div>
        @foreach (var item in Model.usersInProject)
        {
            <div class="col-xs-12 user table-bordered">
                <h4 class="to-left">Name: @Html.DisplayFor(x => item.userName)</h4>
                <div class="to-right">
                    @using (Html.BeginForm("UnsubscribeUser", "User", FormMethod.Post))
                    {
                        <input id="userID" name="userID" type="hidden" userID=@item.userID value=@item.userID>
                        @Html.HiddenFor(m => m.projectID, new { projectID = Model.projectID })
                        <input type="submit" value="Remove" class="btn btn-danger button-size-1" />
                    }
                </div>
            </div>
        }
    </div>
</section>
